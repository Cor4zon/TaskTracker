# sudo nginx             - запуск
# sudo nginx -s stop     - остановка
# sudo nginx -s reload     - остановка
# cat /usr/local/var/log/nginx/error.log
# brew services list - просмотр статуса nginix


# brew services nginx-full stop start restart
#  brew services start nginx-full

proxy_cache_path /usr/local/etc/nginx/cache levels=1:2 keys_zone=all:32m max_size=1g;

# upstream backend {
#     server 127.0.0.1:5005 weight=2;
#     server 127.0.0.1:5006 weight=1;
#     server 127.0.0.1:5007 weight=1;
# }

upstream backend_solo {
    server 127.0.0.1:8000;
}

# Кеширующий хост
server {
    listen 8081;
    location / {
    proxy_pass http://127.0.0.1:8082/;
    proxy_cache all;
    proxy_cache_valid any 1h;
    }
}

# Основной хост
server {
    listen 8082;
    # Заменяем хедер Server
    more_clear_headers Server;
    add_header Server TaskTracker;
    server_name TaskTracker;



    # включаем сжатие


    gzip on;
#     уровень сжатия
    gzip_comp_level 5;

    # определяет MIME типы, для которых будет работать сжатие
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    # Проставляем логи
#     access_log /Users/ilchel/go/src/git/Web/frontend/nginx/logs/log.log;
#     error_log /Users/ilchel/go/src/git/Web/frontend/nginx/logs/errlog.log;


    #
    location / {
        root /Users/vpfedorov/Documents/TaskTracker;
        index index.html;
    }

    location /test {
        return 301 $scheme://$http_host/;
    }
#     http://localhost:8082/status/
    location /status {
        stub_status;
        allow 127.0.0.1;	#only allow requests from localhost
        deny all;
    }

    # не забыть поднять докер
    location /admin {
            return 301 http://localhost:8000/admin;
    }

#     location =/api/v1/ {
#         proxy_no_cache 1;
#         return 301 $scheme://$http_host/api/v1/swagger/index.html;
#     }

    location /tasks/all_projects {
        proxy_no_cache 1;
        proxy_method GET;
        proxy_pass http://backend_solo/;
    }

}